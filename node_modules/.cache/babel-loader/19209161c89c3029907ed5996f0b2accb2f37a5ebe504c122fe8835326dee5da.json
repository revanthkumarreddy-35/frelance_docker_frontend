{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _warning = require('warning');\nvar _warning2 = _interopRequireDefault(_warning);\nvar _invariant = require('invariant');\nvar _invariant2 = _interopRequireDefault(_invariant);\nvar _LocationUtils = require('./LocationUtils');\nvar _PathUtils = require('./PathUtils');\nvar _createTransitionManager = require('./createTransitionManager');\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\nvar _DOMUtils = require('./DOMUtils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar HashChangeEvent = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n  var _props$getUserConfirm = props.getUserConfirmation,\n    getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n    _props$hashType = props.hashType,\n    hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n    encodePath = _HashPathCoders$hashT.encodePath,\n    decodePath = _HashPathCoders$hashT.decodePath;\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n    return (0, _LocationUtils.createLocation)(path);\n  };\n  var transitionManager = (0, _createTransitionManager2.default)();\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n  var forceNextPop = false;\n  var ignorePath = null;\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  };\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));\n  };\n  var push = function push(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n        setState();\n      }\n    });\n  };\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  };\n  var go = function go(n) {\n    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n    globalHistory.go(n);\n  };\n  var goBack = function goBack() {\n    return go(-1);\n  };\n  var goForward = function goForward() {\n    return go(1);\n  };\n  var listenerCount = 0;\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n  var isBlocked = false;\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var unblock = transitionManager.setPrompt(prompt);\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n      return unblock();\n    };\n  };\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n};\nexports.default = createHashHistory;","map":{"version":3,"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_warning","require","_warning2","_interopRequireDefault","_invariant","_invariant2","_LocationUtils","_PathUtils","_createTransitionManager","_createTransitionManager2","_DOMUtils","obj","default","HashChangeEvent","HashPathCoders","hashbang","encodePath","path","charAt","stripLeadingSlash","decodePath","substr","noslash","addLeadingSlash","slash","getHashPath","href","window","location","hashIndex","indexOf","substring","pushHashPath","hash","replaceHashPath","replace","slice","createHashHistory","props","undefined","canUseDOM","globalHistory","history","canGoWithoutReload","supportsGoWithoutReloadUsingHash","_props$getUserConfirm","getUserConfirmation","getConfirmation","_props$hashType","hashType","basename","stripTrailingSlash","_HashPathCoders$hashT","getDOMLocation","hasBasename","stripBasename","createLocation","transitionManager","setState","nextState","notifyListeners","action","forceNextPop","ignorePath","handleHashChange","encodedPath","prevLocation","locationsAreEqual","createPath","handlePop","confirmTransitionTo","ok","revertPop","fromLocation","toLocation","toIndex","allPaths","lastIndexOf","fromIndex","delta","go","initialLocation","createHref","push","state","hashChanged","prevIndex","nextPaths","n","goBack","goForward","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","block","prompt","unblock","setPrompt","listen","listener","unlisten","appendListener"],"sources":["C:/Users/revan/OneDrive/Documents/3rd Year/ODD SEM/Devops/FREELANCE_MARKET_PLACE/react-client - Copy/node_modules/history/createHashHistory.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _LocationUtils = require('./LocationUtils');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _DOMUtils = require('./DOMUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HashChangeEvent = 'hashchange';\n\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + (0, _PathUtils.stripLeadingSlash)(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: _PathUtils.stripLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  },\n  slash: {\n    encodePath: _PathUtils.addLeadingSlash,\n    decodePath: _PathUtils.addLeadingSlash\n  }\n};\n\nvar getHashPath = function getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar createHashHistory = function createHashHistory() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _invariant2.default)(_DOMUtils.canUseDOM, 'Hash history needs a DOM');\n\n  var globalHistory = window.history;\n  var canGoWithoutReload = (0, _DOMUtils.supportsGoWithoutReloadUsingHash)();\n\n  var _props$getUserConfirm = props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === undefined ? _DOMUtils.getConfirmation : _props$getUserConfirm,\n      _props$hashType = props.hashType,\n      hashType = _props$hashType === undefined ? 'slash' : _props$hashType;\n\n  var basename = props.basename ? (0, _PathUtils.stripTrailingSlash)((0, _PathUtils.addLeadingSlash)(props.basename)) : '';\n\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n\n  var getDOMLocation = function getDOMLocation() {\n    var path = decodePath(getHashPath());\n\n    (0, _warning2.default)(!basename || (0, _PathUtils.hasBasename)(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".');\n\n    if (basename) path = (0, _PathUtils.stripBasename)(path, basename);\n\n    return (0, _LocationUtils.createLocation)(path);\n  };\n\n  var transitionManager = (0, _createTransitionManager2.default)();\n\n  var setState = function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n\n    transitionManager.notifyListeners(history.location, history.action);\n  };\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  var handleHashChange = function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n\n      if (!forceNextPop && (0, _LocationUtils.locationsAreEqual)(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === (0, _PathUtils.createPath)(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n\n      handlePop(location);\n    }\n  };\n\n  var handlePop = function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({ action: action, location: location });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  };\n\n  var revertPop = function revertPop(fromLocation) {\n    var toLocation = history.location;\n\n    // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(toLocation));\n\n    if (toIndex === -1) toIndex = 0;\n\n    var fromIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(fromLocation));\n\n    if (fromIndex === -1) fromIndex = 0;\n\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  };\n\n  // Ensure the hash is encoded properly before doing anything else.\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n\n  var initialLocation = getDOMLocation();\n  var allPaths = [(0, _PathUtils.createPath)(initialLocation)];\n\n  // Public interface\n\n  var createHref = function createHref(location) {\n    return '#' + encodePath(basename + (0, _PathUtils.createPath)(location));\n  };\n\n  var push = function push(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot push state; it is ignored');\n\n    var action = 'PUSH';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n\n        var prevIndex = allPaths.lastIndexOf((0, _PathUtils.createPath)(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex === -1 ? 0 : prevIndex + 1);\n\n        nextPaths.push(path);\n        allPaths = nextPaths;\n\n        setState({ action: action, location: location });\n      } else {\n        (0, _warning2.default)(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack');\n\n        setState();\n      }\n    });\n  };\n\n  var replace = function replace(path, state) {\n    (0, _warning2.default)(state === undefined, 'Hash history cannot replace state; it is ignored');\n\n    var action = 'REPLACE';\n    var location = (0, _LocationUtils.createLocation)(path, undefined, undefined, history.location);\n\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n\n      var path = (0, _PathUtils.createPath)(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf((0, _PathUtils.createPath)(history.location));\n\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n\n      setState({ action: action, location: location });\n    });\n  };\n\n  var go = function go(n) {\n    (0, _warning2.default)(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser');\n\n    globalHistory.go(n);\n  };\n\n  var goBack = function goBack() {\n    return go(-1);\n  };\n\n  var goForward = function goForward() {\n    return go(1);\n  };\n\n  var listenerCount = 0;\n\n  var checkDOMListeners = function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1) {\n      (0, _DOMUtils.addEventListener)(window, HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      (0, _DOMUtils.removeEventListener)(window, HashChangeEvent, handleHashChange);\n    }\n  };\n\n  var isBlocked = false;\n\n  var block = function block() {\n    var prompt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  };\n\n  var listen = function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  };\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n\n  return history;\n};\n\nexports.default = createHashHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}