{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","compose","applyMiddleware","_len","middlewares","Array","_key","createStore","reducer","preloadedState","enhancer","store","_dispatch","dispatch","chain","middlewareAPI","getState","action","map","middleware","apply","undefined"],"sources":["C:/Users/revan/OneDrive/Documents/3rd Year/ODD SEM/Devops/FREELANCE_MARKET_PLACE/react-client - Copy/node_modules/redux/es/applyMiddleware.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;MAAE,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;QAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;IAAE;EAAE;EAAE,OAAOL,MAAM;AAAE,CAAC;AAEhQ,OAAOS,OAAO,MAAM,WAAW;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,KAAK,IAAIC,IAAI,GAAGT,SAAS,CAACC,MAAM,EAAES,WAAW,GAAGC,KAAK,CAACF,IAAI,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;IAC1FF,WAAW,CAACE,IAAI,CAAC,GAAGZ,SAAS,CAACY,IAAI,CAAC;EACrC;EAEA,OAAO,UAAUC,WAAW,EAAE;IAC5B,OAAO,UAAUC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAE;MAClD,IAAIC,KAAK,GAAGJ,WAAW,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,CAAC;MAC1D,IAAIE,SAAS,GAAGD,KAAK,CAACE,QAAQ;MAC9B,IAAIC,KAAK,GAAG,EAAE;MAEd,IAAIC,aAAa,GAAG;QAClBC,QAAQ,EAAEL,KAAK,CAACK,QAAQ;QACxBH,QAAQ,EAAE,SAASA,QAAQA,CAACI,MAAM,EAAE;UAClC,OAAOL,SAAS,CAACK,MAAM,CAAC;QAC1B;MACF,CAAC;MACDH,KAAK,GAAGV,WAAW,CAACc,GAAG,CAAC,UAAUC,UAAU,EAAE;QAC5C,OAAOA,UAAU,CAACJ,aAAa,CAAC;MAClC,CAAC,CAAC;MACFH,SAAS,GAAGX,OAAO,CAACmB,KAAK,CAACC,SAAS,EAAEP,KAAK,CAAC,CAACH,KAAK,CAACE,QAAQ,CAAC;MAE3D,OAAOxB,QAAQ,CAAC,CAAC,CAAC,EAAEsB,KAAK,EAAE;QACzBE,QAAQ,EAAED;MACZ,CAAC,CAAC;IACJ,CAAC;EACH,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}